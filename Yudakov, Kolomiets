library(vkR)
library(httr)
library(rjson)
library(tidyr)
library(jsonlite)
library(dplyr)
library(ggplot2)

#Авторизация для получения API key
vkOAuth(7225265, 'photos')

#Полученный ключ нужно вставить ниже
api_key <- ""

#Создание базы для функционирования тела проекта, 
#в первой строчке можно добавить другие паблики, код написан для любого количества
Domain <- c("ru9gag","fckbrain","dank_memes_ayylmao")
Publics <- c(1:length(Domain))
Publics <- rbind(Publics, Domain)
Publics <- t(Publics)
colnames(Publics)[1] <- ("Names")
colnames(Publics)[2] <- ("Domain")
table_final <- data.frame(matrix(ncol=7, nrow=0))
colnames(table_final) <- c("public_name", "owner_id", "id_num", "likes_num", "reposts_num", "views_num", "members")
Urls <- data.frame(matrix(ncol=1, nrow=0))
colnames(Urls) <- c("url")
Members <- data.frame(matrix(ncol=1, nrow=0))
colnames(Members) <- c("Members")

#Первый запрос к API для получения количества подписчиков по группам
for (row in 1:nrow(Publics)) {
  adress <- Publics[row, 2]
  ssilka1 <- "https://api.vk.com/method/groups.getById?group_id="
  ssilka2 <- "&fields=members_count&v=5.103&access_token="
  ssilka <- as.data.frame(paste0("https://vk.com/", ssilka1, "?w=wall", ssilka2, "_", api_key))
  api_call_for_members <- paste0(ssilka1, adress, ssilka2, api_key)
  response_members <- GET(url = api_call_for_members)
  parsed_con_members <- response_members[6]
  parsed_members2 <- content(response_members, as='text')
  parsed_final_members <- fromJSON(parsed_members2)
  Members_num <- as.data.frame(parsed_final_members$response$members_count)
  Members <- rbind(Members, Members_num)
}
colnames(Members) <- c("Members")

#Второй запрос к API для получения постов и информации по ним
for (row in 1:nrow(Publics)) {
adress <- Publics[row, 2]
members <- Members[row,1]
api_call <- "https://api.vk.com/method/wall.get?domain="
api_call_2 <- "&extended=1&count=25&v=5.103&access_token="
api_call <- paste0(api_call, adress, api_call_2, api_key)
response <- GET(url = api_call)
parsed_con <- response[6]
parsed2 <- content(response, as='text')
parsed_final <- fromJSON(parsed2)
likes <- as.data.frame(parsed_final$response$items$likes$count)
reposts <- as.data.frame(parsed_final$response$items$reposts$count)
views <- as.data.frame(parsed_final$response$items$views)
id <- as.data.frame(parsed_final$response$items$id)
owner_id <- as.data.frame((parsed_final$response$items$owner_id))
public_name <- as.data.frame(replicate(25, adress))
members_count <- as.data.frame(replicate(25, members))
table_final_pr <- bind_cols(public_name, owner_id, id, likes, reposts, views, members_count)
table_final <- rbind.data.frame(table_final, table_final_pr)
}
colnames(table_final) <- c("public_name", "owner_id", "id_num", "likes_num", "reposts_num", "views_num", "members")

#Создание ссылок на посты
for (row in 1:nrow(table_final)) {
  ssilka1 <- table_final[row, 1]
  ssilka2 <- table_final[row, 2]
  ssilka3 <- table_final[row, 3]
  ssilka <- as.data.frame(paste0("https://vk.com/", ssilka1, "?w=wall", ssilka2, "_", ssilka3))
  Urls <- rbind.data.frame(Urls, ssilka)
}
colnames(Urls) <- c("url") 
AHAHAMEMES <- bind_cols(table_final, Urls)

#10 наиболее залайканных постов
Memes_Likes <- arrange(AHAHAMEMES, desc(AHAHAMEMES$likes_num))
Memes_Likes <- head(Memes_Likes, 10)         

#10 постов которыми делились больше всего
Memes_Reposts <- arrange(AHAHAMEMES, desc(AHAHAMEMES$reposts_num))
Memes_Reposts <- head(Memes_Reposts, 10)

#10 лучших постов по соотношению лайки/количество подписчиков
dushi <- within(AHAHAMEMES, podush <- likes_num/members)
dushi <- arrange(dushi, desc(dushi$podush))
dushi <- head(dushi, 10)

#10 лучших постов по соотношению лайки/просмотры
prosm <- within(AHAHAMEMES, poprosm <- likes_num/views_num)
prosm <- arrange(prosm, desc(prosm$poprosm))
prosm <- head(prosm, 10)

#Визуализация 1
ggplot(AHAHAMEMES, aes(x=public_name, y=likes_num, col=reposts_num)) + geom_point() + geom_jitter(width=0.15, height=0) + labs(title = "Суммарная статистика постов по пабликам")

#Визуализация 2
ggplot(mapping = aes(x=likes_num, y=views_num, col=public_name)) + geom_point(data = AHAHAMEMES) + labs(title = "Соотношение просмотров и лайков для разных пабликов")
